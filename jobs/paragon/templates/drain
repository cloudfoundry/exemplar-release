#!/usr/bin/env bash

# If a command fails, in a pipeline or not, exit immediately
set -e -o pipefail

function prepend_datetime() {
    awk -W "interactive" \
        '{ system("echo -n [$(date +%FT%T%z)]"); print " " $0 }'
}

# Before redirecting stdout and stderr, copy the file descriptor for original
# stdout (file desc 1) to file descriptor number 3. That's where where BOSH is
# expecting an integer, and only that.
exec \
    3>&1 \
    1> >(prepend_datetime >> /var/vcap/sys/log/paragon/drain.stdout.log) \
    2> >(prepend_datetime >> /var/vcap/sys/log/paragon/drain.stderr.log)

function output_for_bosh() {
    local exit_code=$?

    if [[ ${exit_code} -eq 0 ]]; then
        echo "paragon process is properly drained"
    else
        echo "drain failed"
    fi

    echo "${exit_code}" >&3
}

trap "output_for_bosh" "EXIT"

# blocks until drained, with a 10 minutes timeout
curl --silent --fail --max-time "600" \
    --request "POST" --url "https://127.0.0.1:6060/admin/drain"
